cmake_minimum_required( VERSION 3.13 FATAL_ERROR )

set( PROJECT_NAME BattleTanks )

project( ${PROJECT_NAME} )

add_executable( ${PROJECT_NAME} 
				src/main.cpp

				src/Renderer/ShaderProgram.cpp
				src/Renderer/ShaderProgram.h 
				src/Renderer/Texture2D.cpp
				src/Renderer/Texture2D.h 
				src/Renderer/Sprite.cpp 
				src/Renderer/Sprite.h 	
				src/Renderer/Renderer.cpp 
				src/Renderer/Renderer.h 	
				src/Renderer/SpriteAnimator.cpp 
				src/Renderer/SpriteAnimator.h 

				src/Resources/ResourceManager.cpp 
				src/Resources/ResourceManager.h 
				src/Resources/stb_image.h 

				src/Utils/ShaderHelper.cpp
				src/Utils/ShaderHelper.h	
				src/Utils/VertexBuffer.cpp 
				src/Utils/VertexBuffer.h 
				src/Utils/IndexBuffer.cpp 
				src/Utils/IndexBuffer.h 
				src/Utils/VertexBufferLayout.cpp 
				src/Utils/VertexBufferLayout.h 
				src/Utils/VertexArray.cpp 
				src/Utils/VertexArray.h 
				
				src/Game/Game.h				
				src/Game/Game.cpp	
				src/Game/Level.h				
				src/Game/Level.cpp

				src/Game/GameObjects/Tank.h				
				src/Game/GameObjects/Tank.cpp
				src/Game/GameObjects/IGameObject.h				
				src/Game/GameObjects/IGameObject.cpp
				src/Game/GameObjects/BrickWall.h				
				src/Game/GameObjects/BrickWall.cpp
				src/Game/GameObjects/ConcreteWall.h				
				src/Game/GameObjects/ConcreteWall.cpp
				src/Game/GameObjects/Trees.h				
				src/Game/GameObjects/Trees.cpp
				src/Game/GameObjects/Ice.h				
				src/Game/GameObjects/Ice.cpp

				res/resources.json
			  )

set_property ( DIRECTORY PROPERTY VS_STARTUP_PROJECT ${PROJECT_NAME} )
				
target_compile_features( ${PROJECT_NAME} PUBLIC cxx_std_17 ) 

set( GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE )
set( GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE )
set( GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE )
set( GLFW_INSTALL OFF CACHE BOOL "" FORCE )

add_subdirectory( external/glfw )
target_link_libraries( ${PROJECT_NAME} glfw )

add_subdirectory( external/glad )
target_link_libraries( ${PROJECT_NAME} glad )

include_directories( external/glm )

include_directories( external/rapidjson )

set_target_properties( ${PROJECT_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin/ )

add_custom_command( TARGET ${PROJECT_NAME} POST_BUILD
					COMMAND ${CMAKE_COMMAND} -E copy_directory
					${CMAKE_SOURCE_DIR}/res $<TARGET_FILE_DIR:${PROJECT_NAME}>/res )